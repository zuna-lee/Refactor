/*
 * This file is licensed to You under the "Simplified BSD License".
 * You may not use this software except in compliance with the License. 
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/bsd-license.php
 * 
 * See the COPYRIGHT file distributed with this work for information
 * regarding copyright ownership.
 */
package zuna.mining.hac.dendrogram;

import zuna.model.MyParameter;


/**
 * An ObservationNode represents a leaf node in a Dendrogram.
 * It corresponds to a singleton cluster of one observation.
 * 
 * @author Matthias.Hauswirth@usi.ch
 */
public final class ObservationNode implements DendrogramNode {

	private final int observation;
	private MyParameter parameter;

	
	public ObservationNode(final int observation) {
		this.observation = observation;
	}
	
	public ObservationNode(int observation, MyParameter parameter) {
		super();
		this.observation = observation;
		this.parameter = parameter;
	}

	public final DendrogramNode getLeft() {
		return null;
	}
	
	public final DendrogramNode getRight() {
		return null;
	}
	
	public int getObservationCount() {
		return 1;
	}
	
	public final int getObservation() {
		return observation;
	}

	public MyParameter getParameter() {
		return parameter;
	}

	public void setParameter(MyParameter parameter) {
		this.parameter = parameter;
	}

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return parameter.toString();
	}
}